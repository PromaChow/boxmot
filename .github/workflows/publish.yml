name: Publish to PyPI
on:
  push:
    branches:
      - main

jobs:
  pypi-upload:
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - name: Start Energy Measurement
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: start-measurement
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.RELEASE_PAT }}
      - name: Set up Python environment
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: 'python -m pip install --upgrade pip setuptools wheel uv poetry

          uv sync

          '
      - id: measurement-4
        name: Record Measurement After Install dependencies
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Install dependencies
          task: get-measurement
      - id: get_version
        if: ${{ success() }}
        name: Increase uv path version and add
        run: 'source .venv/bin/activate

          git config --local user.email yolov5.deepsort.pytorch@gmail.com

          git config --local user.name mikel-brostrom

          bump_type=${{ github.event.inputs.bump_type }}

          commit_message=$(poetry version $bump_type)

          new_version=$(echo $commit_message | grep -oE ''[0-9]+\.[0-9]+\.[0-9]+$'')

          git add pyproject.toml

          uv build --no-sources

          echo "commit_message=$commit_message" >> $GITHUB_OUTPUT

          echo "new_version=$new_version" >> $GITHUB_OUTPUT

          du -sh dist/*

          '
      - id: measurement-6
        name: Record Measurement After Increase uv path version and add
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Increase uv path version and add
          task: get-measurement
      - if: ${{ success() }}
        name: Update __init__.py version and add
        run: 'sed -i "s/__version__ = ''.*''/__version__ = ''${{ steps.get_version.outputs.new_version
          }}''/" boxmot/__init__.py

          git add boxmot/__init__.py

          '
      - id: measurement-8
        name: Record Measurement After Update __init__.py version and add
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Update __init__.py version and add
          task: get-measurement
      - if: ${{ success() }}
        name: Update citation pkg version and add
        run: 'sed -i "s/version: .*/version: ${{ steps.get_version.outputs.new_version
          }}/" CITATION.cff

          git add CITATION.cff

          '
      - id: measurement-10
        name: Record Measurement After Update citation pkg version and add
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Update citation pkg version and add
          task: get-measurement
      - if: ${{ success() }}
        name: Commit and push updated version
        run: "if [ \"${{ github.event.inputs.pypi }}\" == \"pypi\" ]; then\n  git\
          \ commit -m \"${{ steps.get_version.outputs.commit_message }}\"\n  git push\n\
          fi\n"
      - id: measurement-12
        name: Record Measurement After Commit and push updated version
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Commit and push updated version
          task: get-measurement
      - if: ${{ success() }}
        name: Publish to PyPI
        run: "if [ \"${{ github.event.inputs.pypi }}\" == \"pypi\" ]; then\n  uv publish\
          \ --token ${{ secrets.PYPI_TOKEN }}\nelse\n  uv publish --index testpypi\
          \ --token ${{ secrets.TEST_PYPI_TOKEN }}\nfi\n"
      - id: measurement-14
        name: Record Measurement After Publish to PyPI
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          label: Publish to PyPI
          task: get-measurement
      - env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: create_release
        if: ${{ success() }}
        name: Create code release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          release_name: Release v${{ steps.get_version.outputs.new_version }}
          tag_name: v${{ steps.get_version.outputs.new_version }}
      - id: display-measurement
        name: Display Energy Results
        uses: green-coding-solutions/eco-ci-energy-estimation@862050e4f01f65b1436e5eca18ba4bd85562f0de
        with:
          json-output: true
          task: display-results
      - name: Save Total Energy Consumption Data
        run: echo '${{ steps.final-measurement.outputs.data-total-json }}' > total_energy_consumption.json
      - name: Upload Energy Consumption Artifact
        uses: actions/upload-artifact@v4
        with:
          name: total-energy-consumption
          path: total_energy_consumption.json
